/*
 * VPDB - Virtual Pinball Database
 * Copyright (C) 2019 freezy <freezy@vpdb.io>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */

import { Mesh } from 'three';
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';
import { Table } from '../..';
import { ThreeHelper } from '../../../test/three.helper';
import { NodeBinaryReader } from '../../io/binary-reader.node';

const three = new ThreeHelper();

describe('The VPinball flipper generator', () => {

	let gltf: GLTF;

	before(async () => {
		const vpt = await Table.load(new NodeBinaryReader(three.fixturePath('table-flipper.vpx')));
		gltf = await three.loadGlb(await vpt.exportGlb());
	});

	it('should generate a default flipper mesh', async () => {
		const flipperBaseMesh = three.find<Mesh>(gltf, 'flippers', 'DefaultFlipper', 'flipperbase-DefaultFlipper');
		const flipperBaseMeshVertices = three.vertices(flipperBaseMesh);
		let expectedVertices = [
			[381.108154, 1693.057495, -0.187650],
			[381.108154, 1693.057495, -50.212650],
			[382.565002, 1693.690918, -50.212650],
			[382.565002, 1693.690918, -0.187650],
			[387.192688, 1693.163696, -0.187650],
			[387.192688, 1693.163696, -50.212650],
			[388.469788, 1692.218750, -50.212650],
			[388.469788, 1692.218750, -0.187650],
			[390.326965, 1687.947388, -0.187650],
			[390.326965, 1687.947388, -50.212650],
			[390.147156, 1686.369019, -50.212650],
			[390.147156, 1686.369019, -0.187650],
			[387.192688, 1693.163696, -0.187650],
			[388.469788, 1692.218750, -0.187650],
			[389.458710, 1690.975464, -0.187650],
			[390.092194, 1689.518555, -0.187650],
			[390.326965, 1687.947388, -0.187650],
			[390.147156, 1686.369019, -0.187650],
			[389.564911, 1684.890869, -0.187650],
			[388.619934, 1683.613892, -0.187650],
			[387.376709, 1682.624878, -0.187650],
			[280.524963, 1608.476318, -0.187650],
			[277.027252, 1606.955444, -0.187650],
			[273.255035, 1606.391724, -0.187650],
			[269.465393, 1606.823364, -0.187650],
			[265.916626, 1608.221313, -0.187650],
			[262.850647, 1610.490112, -0.187650],
			[260.476379, 1613.475098, -0.187650],
			[258.955444, 1616.972778, -0.187650],
			[258.391663, 1620.744995, -0.187650],
			[258.823395, 1624.534668, -0.187650],
			[260.221344, 1628.083374, -0.187650],
			[262.490082, 1631.149414, -0.187650],
			[265.475037, 1633.523682, -0.187650],
			[381.108154, 1693.057495, -0.187650],
			[382.565002, 1693.690918, -0.187650],
			[384.136169, 1693.925781, -0.187650],
			[385.714630, 1693.745850, -0.187650],
			[384.136169, 1693.925781, -50.212650],
			[382.565002, 1693.690918, -50.212650],
			[381.108154, 1693.057495, -50.212650],
			[265.475037, 1633.523682, -50.212650],
			[262.490082, 1631.149414, -50.212650],
			[260.221344, 1628.083374, -50.212650],
			[258.823395, 1624.534668, -50.212650],
			[258.391663, 1620.744995, -50.212650],
			[258.955444, 1616.972778, -50.212650],
			[260.476379, 1613.475098, -50.212650],
			[262.850647, 1610.490112, -50.212650],
			[265.916626, 1608.221313, -50.212650],
			[269.465393, 1606.823364, -50.212650],
			[273.255035, 1606.391724, -50.212650],
			[277.027252, 1606.955444, -50.212650],
			[280.524963, 1608.476318, -50.212650],
			[387.376709, 1682.624878, -50.212650],
			[388.619934, 1683.613892, -50.212650],
			[389.564911, 1684.890869, -50.212650],
			[390.147156, 1686.369019, -50.212650],
			[390.326965, 1687.947388, -50.212650],
			[390.092194, 1689.518555, -50.212650],
			[389.458710, 1690.975464, -50.212650],
			[388.469788, 1692.218750, -50.212650],
			[387.192688, 1693.163696, -50.212650],
			[385.714630, 1693.745850, -50.212650],
			[265.916626, 1608.221313, -0.187650],
			[265.916626, 1608.221313, -50.212650],
			[262.850647, 1610.490112, -50.212650],
			[262.850647, 1610.490112, -0.187650],
			[384.136169, 1693.925781, -0.187650],
			[384.136169, 1693.925781, -50.212650],
			[385.714630, 1693.745850, -50.212650],
			[385.714630, 1693.745850, -0.187650],
			[390.092194, 1689.518555, -0.187650],
			[390.092194, 1689.518555, -50.212650],
			[280.524963, 1608.476318, -50.212650],
			[277.027252, 1606.955444, -50.212650],
			[277.027252, 1606.955444, -0.187650],
			[280.524963, 1608.476318, -0.187650],
			[258.391663, 1620.744995, -0.187650],
			[258.391663, 1620.744995, -50.212650],
			[258.823395, 1624.534668, -50.212650],
			[258.823395, 1624.534668, -0.187650],
			[260.476379, 1613.475098, -50.212650],
			[260.476379, 1613.475098, -0.187650],
			[273.255035, 1606.391724, -50.212650],
			[273.255035, 1606.391724, -0.187650],
			[389.458710, 1690.975464, -0.187650],
			[389.458710, 1690.975464, -50.212650],
			[387.376709, 1682.624878, -0.187650],
			[387.376709, 1682.624878, -50.212650],
			[388.619934, 1683.613892, -0.187650],
			[388.619934, 1683.613892, -50.212650],
			[258.955444, 1616.972778, -0.187650],
			[258.955444, 1616.972778, -50.212650],
			[260.221344, 1628.083374, -50.212650],
			[260.221344, 1628.083374, -0.187650],
			[269.465393, 1606.823364, -0.187650],
			[269.465393, 1606.823364, -50.212650],
			[262.490082, 1631.149414, -0.187650],
			[262.490082, 1631.149414, -50.212650],
			[265.475037, 1633.523682, -50.212650],
			[265.475037, 1633.523682, -0.187650],
			[389.564911, 1684.890869, -0.187650],
			[389.564911, 1684.890869, -50.212650],
		];
		three.expectVerticesInArray(expectedVertices, flipperBaseMeshVertices);

		const flipperRubberMesh = three.find<Mesh>(gltf, 'flippers', 'DefaultFlipper', 'flipperrubber-DefaultFlipper');
		const flipperRubberMeshVertices = three.vertices(flipperRubberMesh);
		expectedVertices = [
			[377.230652, 1699.010498, -19.090073],
			[377.230652, 1699.010498, -43.102074],
			[380.387146, 1700.382935, -43.102074],
			[380.387146, 1700.382935, -19.090073],
			[390.413788, 1699.240601, -19.090073],
			[390.413788, 1699.240601, -43.102074],
			[393.180786, 1697.193237, -43.102074],
			[393.180786, 1697.193237, -19.090073],
			[397.204773, 1687.938477, -19.090073],
			[397.204773, 1687.938477, -43.102074],
			[396.815094, 1684.518677, -43.102074],
			[396.815094, 1684.518677, -19.090073],
			[390.413788, 1699.240601, -19.090073],
			[393.180786, 1697.193237, -19.090073],
			[395.323547, 1694.499390, -19.090073],
			[396.696045, 1691.342773, -19.090073],
			[397.204773, 1687.938477, -19.090073],
			[396.815094, 1684.518677, -19.090073],
			[395.553589, 1681.316040, -19.090073],
			[393.506165, 1678.549194, -19.090073],
			[390.812439, 1676.406494, -19.090073],
			[284.157684, 1602.430420, -19.090073],
			[278.971436, 1600.175293, -19.090073],
			[273.378143, 1599.339355, -19.090073],
			[267.759003, 1599.979492, -19.090073],
			[262.497070, 1602.052368, -19.090073],
			[257.950958, 1605.416382, -19.090073],
			[254.430481, 1609.842285, -19.090073],
			[252.175339, 1615.028564, -19.090073],
			[251.339371, 1620.621826, -19.090073],
			[251.979523, 1626.240967, -19.090073],
			[254.052322, 1631.502930, -19.090073],
			[257.416321, 1636.049072, -19.090073],
			[261.842316, 1639.569580, -19.090073],
			[377.230652, 1699.010498, -19.090073],
			[380.387146, 1700.382935, -19.090073],
			[383.791351, 1700.891724, -19.090073],
			[387.211334, 1700.502075, -19.090073],
			[383.791351, 1700.891724, -43.102074],
			[380.387146, 1700.382935, -43.102074],
			[377.230652, 1699.010498, -43.102074],
			[261.842316, 1639.569580, -43.102074],
			[257.416321, 1636.049072, -43.102074],
			[254.052322, 1631.502930, -43.102074],
			[251.979523, 1626.240967, -43.102074],
			[251.339371, 1620.621826, -43.102074],
			[252.175339, 1615.028564, -43.102074],
			[254.430481, 1609.842285, -43.102074],
			[257.950958, 1605.416382, -43.102074],
			[262.497070, 1602.052368, -43.102074],
			[267.759003, 1599.979492, -43.102074],
			[273.378143, 1599.339355, -43.102074],
			[278.971436, 1600.175293, -43.102074],
			[284.157684, 1602.430420, -43.102074],
			[390.812439, 1676.406494, -43.102074],
			[393.506165, 1678.549194, -43.102074],
			[395.553589, 1681.316040, -43.102074],
			[396.815094, 1684.518677, -43.102074],
			[397.204773, 1687.938477, -43.102074],
			[396.696045, 1691.342773, -43.102074],
			[395.323547, 1694.499390, -43.102074],
			[393.180786, 1697.193237, -43.102074],
			[390.413788, 1699.240601, -43.102074],
			[387.211334, 1700.502075, -43.102074],
			[262.497070, 1602.052368, -19.090073],
			[262.497070, 1602.052368, -43.102074],
			[257.950958, 1605.416382, -43.102074],
			[257.950958, 1605.416382, -19.090073],
			[383.791351, 1700.891724, -19.090073],
			[383.791351, 1700.891724, -43.102074],
			[387.211334, 1700.502075, -43.102074],
			[387.211334, 1700.502075, -19.090073],
			[396.696045, 1691.342773, -19.090073],
			[396.696045, 1691.342773, -43.102074],
			[284.157684, 1602.430420, -43.102074],
			[278.971436, 1600.175293, -43.102074],
			[278.971436, 1600.175293, -19.090073],
			[284.157684, 1602.430420, -19.090073],
			[251.339371, 1620.621826, -19.090073],
			[251.339371, 1620.621826, -43.102074],
			[251.979523, 1626.240967, -43.102074],
			[251.979523, 1626.240967, -19.090073],
			[254.430481, 1609.842285, -43.102074],
			[254.430481, 1609.842285, -19.090073],
			[273.378143, 1599.339355, -43.102074],
			[273.378143, 1599.339355, -19.090073],
			[395.323547, 1694.499390, -19.090073],
			[395.323547, 1694.499390, -43.102074],
			[390.812439, 1676.406494, -19.090073],
			[390.812439, 1676.406494, -43.102074],
			[393.506165, 1678.549194, -19.090073],
			[393.506165, 1678.549194, -43.102074],
			[252.175339, 1615.028564, -19.090073],
			[252.175339, 1615.028564, -43.102074],
			[254.052322, 1631.502930, -43.102074],
			[254.052322, 1631.502930, -19.090073],
			[267.759003, 1599.979492, -19.090073],
			[267.759003, 1599.979492, -43.102074],
			[257.416321, 1636.049072, -19.090073],
			[257.416321, 1636.049072, -43.102074],
			[261.842316, 1639.569580, -43.102074],
			[261.842316, 1639.569580, -19.090073],
			[395.553589, 1681.316040, -19.090073],
			[395.553589, 1681.316040, -43.102074],
		];
		three.expectVerticesInArray(expectedVertices, flipperRubberMeshVertices);
	});

	it('should generate a rotated flipper mesh', async () => {
		const flipperBaseMesh = three.find<Mesh>(gltf, 'flippers', 'FlipperR', 'flipperbase-FlipperR');
		const flipperBaseMeshVertices = three.vertices(flipperBaseMesh);
		let expectedVertices = [
			[617.062012, 1679.549927, -0.187650],
			[617.062012, 1679.549927, -50.212650],
			[616.009338, 1680.739746, -50.212650],
			[616.009338, 1680.739746, -0.187650],
			[615.080750, 1685.303833, -0.187650],
			[615.080750, 1685.303833, -50.212650],
			[615.584778, 1686.810425, -50.212650],
			[615.584778, 1686.810425, -0.187650],
			[619.073242, 1689.896729, -0.187650],
			[619.073242, 1689.896729, -50.212650],
			[620.629944, 1690.213379, -50.212650],
			[620.629944, 1690.213379, -0.187650],
			[615.080750, 1685.303833, -0.187650],
			[615.584778, 1686.810425, -0.187650],
			[616.461670, 1688.135254, -0.187650],
			[617.651489, 1689.187866, -0.187650],
			[619.073242, 1689.896729, -0.187650],
			[620.629944, 1690.213379, -0.187650],
			[622.215637, 1690.116455, -0.187650],
			[623.722168, 1689.612305, -0.187650],
			[625.046875, 1688.735596, -0.187650],
			[728.585327, 1610.026733, -0.187650],
			[731.112671, 1607.170166, -0.187650],
			[732.814514, 1603.756714, -0.187650],
			[733.575012, 1600.019165, -0.187650],
			[733.342102, 1596.212158, -0.187650],
			[732.131836, 1592.595093, -0.187650],
			[730.026672, 1589.414673, -0.187650],
			[727.170166, 1586.887329, -0.187650],
			[723.756775, 1585.185425, -0.187650],
			[720.019165, 1584.425049, -0.187650],
			[716.212158, 1584.657837, -0.187650],
			[712.595154, 1585.868164, -0.187650],
			[709.414673, 1587.973267, -0.187650],
			[617.062012, 1679.549927, -0.187650],
			[616.009338, 1680.739746, -0.187650],
			[615.300476, 1682.161499, -0.187650],
			[614.983765, 1683.718262, -0.187650],
			[615.300476, 1682.161499, -50.212650],
			[616.009338, 1680.739746, -50.212650],
			[617.062012, 1679.549927, -50.212650],
			[709.414673, 1587.973267, -50.212650],
			[712.595154, 1585.868164, -50.212650],
			[716.212158, 1584.657837, -50.212650],
			[720.019165, 1584.425049, -50.212650],
			[723.756775, 1585.185425, -50.212650],
			[727.170166, 1586.887329, -50.212650],
			[730.026672, 1589.414673, -50.212650],
			[732.131836, 1592.595093, -50.212650],
			[733.342102, 1596.212158, -50.212650],
			[733.575012, 1600.019165, -50.212650],
			[732.814514, 1603.756714, -50.212650],
			[731.112671, 1607.170166, -50.212650],
			[728.585327, 1610.026733, -50.212650],
			[625.046875, 1688.735596, -50.212650],
			[623.722168, 1689.612305, -50.212650],
			[622.215637, 1690.116455, -50.212650],
			[620.629944, 1690.213379, -50.212650],
			[619.073242, 1689.896729, -50.212650],
			[617.651489, 1689.187866, -50.212650],
			[616.461670, 1688.135254, -50.212650],
			[615.584778, 1686.810425, -50.212650],
			[615.080750, 1685.303833, -50.212650],
			[614.983765, 1683.718262, -50.212650],
			[733.342102, 1596.212158, -0.187650],
			[733.342102, 1596.212158, -50.212650],
			[732.131836, 1592.595093, -50.212650],
			[732.131836, 1592.595093, -0.187650],
			[615.300476, 1682.161499, -0.187650],
			[615.300476, 1682.161499, -50.212650],
			[614.983765, 1683.718262, -50.212650],
			[614.983765, 1683.718262, -0.187650],
			[617.651489, 1689.187866, -0.187650],
			[617.651489, 1689.187866, -50.212650],
			[728.585327, 1610.026733, -50.212650],
			[731.112671, 1607.170166, -50.212650],
			[731.112671, 1607.170166, -0.187650],
			[728.585327, 1610.026733, -0.187650],
			[723.756775, 1585.185425, -0.187650],
			[723.756775, 1585.185425, -50.212650],
			[720.019165, 1584.425049, -50.212650],
			[720.019165, 1584.425049, -0.187650],
			[730.026672, 1589.414673, -50.212650],
			[730.026672, 1589.414673, -0.187650],
			[732.814514, 1603.756714, -50.212650],
			[732.814514, 1603.756714, -0.187650],
			[616.461670, 1688.135254, -0.187650],
			[616.461670, 1688.135254, -50.212650],
			[625.046875, 1688.735596, -0.187650],
			[625.046875, 1688.735596, -50.212650],
			[623.722168, 1689.612305, -0.187650],
			[623.722168, 1689.612305, -50.212650],
			[727.170166, 1586.887329, -0.187650],
			[727.170166, 1586.887329, -50.212650],
			[716.212158, 1584.657837, -50.212650],
			[716.212158, 1584.657837, -0.187650],
			[733.575012, 1600.019165, -0.187650],
			[733.575012, 1600.019165, -50.212650],
			[712.595154, 1585.868164, -0.187650],
			[712.595154, 1585.868164, -50.212650],
			[709.414673, 1587.973267, -50.212650],
			[709.414673, 1587.973267, -0.187650],
			[622.215637, 1690.116455, -0.187650],
			[622.215637, 1690.116455, -50.212650],
		];
		three.expectVerticesInArray(expectedVertices, flipperBaseMeshVertices);

		const flipperRubberMesh = three.find<Mesh>(gltf, 'flippers', 'FlipperR', 'flipperrubber-FlipperR');
		const flipperRubberMeshVertices = three.vertices(flipperRubberMesh);
		expectedVertices = [
			[612.598633, 1674.022705, -19.090073],
			[612.598633, 1674.022705, -43.102074],
			[610.317932, 1676.600586, -43.102074],
			[610.317932, 1676.600586, -19.090073],
			[608.305908, 1686.489502, -19.090073],
			[608.305908, 1686.489502, -43.102074],
			[609.398071, 1689.753662, -43.102074],
			[609.398071, 1689.753662, -19.090073],
			[616.956299, 1696.440552, -19.090073],
			[616.956299, 1696.440552, -43.102074],
			[620.329163, 1697.126831, -43.102074],
			[620.329163, 1697.126831, -19.090073],
			[608.305908, 1686.489502, -19.090073],
			[609.398071, 1689.753662, -19.090073],
			[611.297852, 1692.624023, -19.090073],
			[613.875854, 1694.904785, -19.090073],
			[616.956299, 1696.440552, -19.090073],
			[620.329163, 1697.126831, -19.090073],
			[623.764832, 1696.916748, -19.090073],
			[627.028992, 1695.824463, -19.090073],
			[629.899231, 1693.924683, -19.090073],
			[733.212769, 1615.349854, -19.090073],
			[736.960144, 1611.114380, -19.090073],
			[739.483643, 1606.053101, -19.090073],
			[740.611206, 1600.511230, -19.090073],
			[740.265869, 1594.866211, -19.090073],
			[738.471375, 1589.503174, -19.090073],
			[735.349915, 1584.787231, -19.090073],
			[731.114319, 1581.039795, -19.090073],
			[726.053162, 1578.516357, -19.090073],
			[720.511230, 1577.388794, -19.090073],
			[714.866272, 1577.734131, -19.090073],
			[709.503113, 1579.528687, -19.090073],
			[704.787231, 1582.650146, -19.090073],
			[612.598633, 1674.022705, -19.090073],
			[610.317932, 1676.600586, -19.090073],
			[608.782043, 1679.680908, -19.090073],
			[608.095825, 1683.053955, -19.090073],
			[608.782043, 1679.680908, -43.102074],
			[610.317932, 1676.600586, -43.102074],
			[612.598633, 1674.022705, -43.102074],
			[704.787231, 1582.650146, -43.102074],
			[709.503113, 1579.528687, -43.102074],
			[714.866272, 1577.734131, -43.102074],
			[720.511230, 1577.388794, -43.102074],
			[726.053162, 1578.516357, -43.102074],
			[731.114319, 1581.039795, -43.102074],
			[735.349915, 1584.787231, -43.102074],
			[738.471375, 1589.503174, -43.102074],
			[740.265869, 1594.866211, -43.102074],
			[740.611206, 1600.511230, -43.102074],
			[739.483643, 1606.053101, -43.102074],
			[736.960144, 1611.114380, -43.102074],
			[733.212769, 1615.349854, -43.102074],
			[629.899231, 1693.924683, -43.102074],
			[627.028992, 1695.824463, -43.102074],
			[623.764832, 1696.916748, -43.102074],
			[620.329163, 1697.126831, -43.102074],
			[616.956299, 1696.440552, -43.102074],
			[613.875854, 1694.904785, -43.102074],
			[611.297852, 1692.624023, -43.102074],
			[609.398071, 1689.753662, -43.102074],
			[608.305908, 1686.489502, -43.102074],
			[608.095825, 1683.053955, -43.102074],
			[740.265869, 1594.866211, -19.090073],
			[740.265869, 1594.866211, -43.102074],
			[738.471375, 1589.503174, -43.102074],
			[738.471375, 1589.503174, -19.090073],
			[608.782043, 1679.680908, -19.090073],
			[608.782043, 1679.680908, -43.102074],
			[608.095825, 1683.053955, -43.102074],
			[608.095825, 1683.053955, -19.090073],
			[613.875854, 1694.904785, -19.090073],
			[613.875854, 1694.904785, -43.102074],
			[733.212769, 1615.349854, -43.102074],
			[736.960144, 1611.114380, -43.102074],
			[736.960144, 1611.114380, -19.090073],
			[733.212769, 1615.349854, -19.090073],
			[726.053162, 1578.516357, -19.090073],
			[726.053162, 1578.516357, -43.102074],
			[720.511230, 1577.388794, -43.102074],
			[720.511230, 1577.388794, -19.090073],
			[735.349915, 1584.787231, -43.102074],
			[735.349915, 1584.787231, -19.090073],
			[739.483643, 1606.053101, -43.102074],
			[739.483643, 1606.053101, -19.090073],
			[611.297852, 1692.624023, -19.090073],
			[611.297852, 1692.624023, -43.102074],
			[629.899231, 1693.924683, -19.090073],
			[629.899231, 1693.924683, -43.102074],
			[627.028992, 1695.824463, -19.090073],
			[627.028992, 1695.824463, -43.102074],
			[731.114319, 1581.039795, -19.090073],
			[731.114319, 1581.039795, -43.102074],
			[714.866272, 1577.734131, -43.102074],
			[714.866272, 1577.734131, -19.090073],
			[740.611206, 1600.511230, -19.090073],
			[740.611206, 1600.511230, -43.102074],
			[709.503113, 1579.528687, -19.090073],
			[709.503113, 1579.528687, -43.102074],
			[704.787231, 1582.650146, -43.102074],
			[704.787231, 1582.650146, -19.090073],
			[623.764832, 1696.916748, -19.090073],
			[623.764832, 1696.916748, -43.102074],
		];
		three.expectVerticesInArray(expectedVertices, flipperRubberMeshVertices);
	});

	it('should generate a resized flipper mesh', async () => {
		const flipperBaseMesh = three.find<Mesh>(gltf, 'flippers', 'FatFlipper', 'flipperbase-FatFlipper');
		const flipperBaseMeshVertices = three.vertices(flipperBaseMesh);
		let expectedVertices = [
			[390.374023, 1389.311279, -0.262710],
			[390.374023, 1389.311279, -70.297714],
			[393.530487, 1390.683716, -70.297714],
			[393.530487, 1390.683716, -0.262710],
			[403.557129, 1389.541382, -0.262710],
			[403.557129, 1389.541382, -70.297714],
			[406.324127, 1387.494019, -70.297714],
			[406.324127, 1387.494019, -0.262710],
			[410.348083, 1378.239258, -0.262710],
			[410.348083, 1378.239258, -70.297714],
			[409.958435, 1374.819458, -70.297714],
			[409.958435, 1374.819458, -0.262710],
			[403.557129, 1389.541382, -0.262710],
			[406.324127, 1387.494019, -0.262710],
			[408.466888, 1384.800171, -0.262710],
			[409.839417, 1381.643555, -0.262710],
			[410.348083, 1378.239258, -0.262710],
			[409.958435, 1374.819458, -0.262710],
			[408.696960, 1371.616821, -0.262710],
			[406.649506, 1368.849976, -0.262710],
			[403.955811, 1366.707275, -0.262710],
			[280.936157, 1281.134888, -0.262710],
			[275.388031, 1278.722412, -0.262710],
			[269.404541, 1277.828125, -0.262710],
			[263.393372, 1278.512939, -0.262710],
			[257.764313, 1280.730347, -0.262710],
			[252.901016, 1284.329102, -0.262710],
			[249.134918, 1289.063843, -0.262710],
			[246.722443, 1294.611938, -0.262710],
			[245.828156, 1300.595459, -0.262710],
			[246.512985, 1306.606689, -0.262710],
			[248.730392, 1312.235718, -0.262710],
			[252.329086, 1317.098999, -0.262710],
			[257.063843, 1320.865112, -0.262710],
			[390.374023, 1389.311279, -0.262710],
			[393.530487, 1390.683716, -0.262710],
			[396.934723, 1391.192505, -0.262710],
			[400.354675, 1390.802734, -0.262710],
			[396.934723, 1391.192505, -70.297714],
			[393.530487, 1390.683716, -70.297714],
			[390.374023, 1389.311279, -70.297714],
			[257.063843, 1320.865112, -70.297714],
			[252.329086, 1317.098999, -70.297714],
			[248.730392, 1312.235718, -70.297714],
			[246.512985, 1306.606689, -70.297714],
			[245.828156, 1300.595459, -70.297714],
			[246.722443, 1294.611938, -70.297714],
			[249.134918, 1289.063843, -70.297714],
			[252.901016, 1284.329102, -70.297714],
			[257.764313, 1280.730347, -70.297714],
			[263.393372, 1278.512939, -70.297714],
			[269.404541, 1277.828125, -70.297714],
			[275.388031, 1278.722412, -70.297714],
			[280.936157, 1281.134888, -70.297714],
			[403.955811, 1366.707275, -70.297714],
			[406.649506, 1368.849976, -70.297714],
			[408.696960, 1371.616821, -70.297714],
			[409.958435, 1374.819458, -70.297714],
			[410.348083, 1378.239258, -70.297714],
			[409.839417, 1381.643555, -70.297714],
			[408.466888, 1384.800171, -70.297714],
			[406.324127, 1387.494019, -70.297714],
			[403.557129, 1389.541382, -70.297714],
			[400.354675, 1390.802734, -70.297714],
			[257.764313, 1280.730347, -0.262710],
			[257.764313, 1280.730347, -70.297714],
			[252.901016, 1284.329102, -70.297714],
			[252.901016, 1284.329102, -0.262710],
			[396.934723, 1391.192505, -0.262710],
			[396.934723, 1391.192505, -70.297714],
			[400.354675, 1390.802734, -70.297714],
			[400.354675, 1390.802734, -0.262710],
			[409.839417, 1381.643555, -0.262710],
			[409.839417, 1381.643555, -70.297714],
			[280.936157, 1281.134888, -70.297714],
			[275.388031, 1278.722412, -70.297714],
			[275.388031, 1278.722412, -0.262710],
			[280.936157, 1281.134888, -0.262710],
			[245.828156, 1300.595459, -0.262710],
			[245.828156, 1300.595459, -70.297714],
			[246.512985, 1306.606689, -70.297714],
			[246.512985, 1306.606689, -0.262710],
			[249.134918, 1289.063843, -70.297714],
			[249.134918, 1289.063843, -0.262710],
			[269.404541, 1277.828125, -70.297714],
			[269.404541, 1277.828125, -0.262710],
			[408.466888, 1384.800171, -0.262710],
			[408.466888, 1384.800171, -70.297714],
			[403.955811, 1366.707275, -0.262710],
			[403.955811, 1366.707275, -70.297714],
			[406.649506, 1368.849976, -0.262710],
			[406.649506, 1368.849976, -70.297714],
			[246.722443, 1294.611938, -0.262710],
			[246.722443, 1294.611938, -70.297714],
			[248.730392, 1312.235718, -70.297714],
			[248.730392, 1312.235718, -0.262710],
			[263.393372, 1278.512939, -0.262710],
			[263.393372, 1278.512939, -70.297714],
			[252.329086, 1317.098999, -0.262710],
			[252.329086, 1317.098999, -70.297714],
			[257.063843, 1320.865112, -70.297714],
			[257.063843, 1320.865112, -0.262710],
			[408.696960, 1371.616821, -0.262710],
			[408.696960, 1371.616821, -70.297714],
		];
		three.expectVerticesInArray(expectedVertices, flipperBaseMeshVertices);

		const flipperRubberMesh = three.find<Mesh>(gltf, 'flippers', 'FatFlipper', 'flipperrubber-FatFlipper');
		const flipperRubberMeshVertices = three.vertices(flipperRubberMesh);
		expectedVertices = [
			[386.496490, 1395.264160, -19.090073],
			[386.496490, 1395.264160, -43.102074],
			[391.352631, 1397.375610, -43.102074],
			[391.352631, 1397.375610, -19.090073],
			[406.778259, 1395.618164, -19.090073],
			[406.778259, 1395.618164, -43.102074],
			[411.035156, 1392.468384, -43.102074],
			[411.035156, 1392.468384, -19.090073],
			[417.225891, 1378.230469, -19.090073],
			[417.225891, 1378.230469, -43.102074],
			[416.626404, 1372.969116, -43.102074],
			[416.626404, 1372.969116, -19.090073],
			[406.778259, 1395.618164, -19.090073],
			[411.035156, 1392.468384, -19.090073],
			[414.331665, 1388.324097, -19.090073],
			[416.443237, 1383.467773, -19.090073],
			[417.225891, 1378.230469, -19.090073],
			[416.626404, 1372.969116, -19.090073],
			[414.685669, 1368.042114, -19.090073],
			[411.535736, 1363.785278, -19.090073],
			[407.391602, 1360.488892, -19.090073],
			[284.568878, 1275.088989, -19.090073],
			[277.332214, 1271.942383, -19.090073],
			[269.527649, 1270.775879, -19.090073],
			[261.686981, 1271.669067, -19.090073],
			[254.344742, 1274.561401, -19.090073],
			[248.001328, 1279.255371, -19.090073],
			[243.089035, 1285.431152, -19.090073],
			[239.942322, 1292.667725, -19.090073],
			[238.775864, 1300.472412, -19.090073],
			[239.669113, 1308.312988, -19.090073],
			[242.561386, 1315.655273, -19.090073],
			[247.255341, 1321.998657, -19.090073],
			[253.431122, 1326.911011, -19.090073],
			[386.496490, 1395.264160, -19.090073],
			[391.352631, 1397.375610, -19.090073],
			[396.589905, 1398.158447, -19.090073],
			[401.851379, 1397.558838, -19.090073],
			[396.589905, 1398.158447, -43.102074],
			[391.352631, 1397.375610, -43.102074],
			[386.496490, 1395.264160, -43.102074],
			[253.431122, 1326.911011, -43.102074],
			[247.255341, 1321.998657, -43.102074],
			[242.561386, 1315.655273, -43.102074],
			[239.669113, 1308.312988, -43.102074],
			[238.775864, 1300.472412, -43.102074],
			[239.942322, 1292.667725, -43.102074],
			[243.089035, 1285.431152, -43.102074],
			[248.001328, 1279.255371, -43.102074],
			[254.344742, 1274.561401, -43.102074],
			[261.686981, 1271.669067, -43.102074],
			[269.527649, 1270.775879, -43.102074],
			[277.332214, 1271.942383, -43.102074],
			[284.568878, 1275.088989, -43.102074],
			[407.391602, 1360.488892, -43.102074],
			[411.535736, 1363.785278, -43.102074],
			[414.685669, 1368.042114, -43.102074],
			[416.626404, 1372.969116, -43.102074],
			[417.225891, 1378.230469, -43.102074],
			[416.443237, 1383.467773, -43.102074],
			[414.331665, 1388.324097, -43.102074],
			[411.035156, 1392.468384, -43.102074],
			[406.778259, 1395.618164, -43.102074],
			[401.851379, 1397.558838, -43.102074],
			[254.344742, 1274.561401, -19.090073],
			[254.344742, 1274.561401, -43.102074],
			[248.001328, 1279.255371, -43.102074],
			[248.001328, 1279.255371, -19.090073],
			[396.589905, 1398.158447, -19.090073],
			[396.589905, 1398.158447, -43.102074],
			[401.851379, 1397.558838, -43.102074],
			[401.851379, 1397.558838, -19.090073],
			[416.443237, 1383.467773, -19.090073],
			[416.443237, 1383.467773, -43.102074],
			[284.568878, 1275.088989, -43.102074],
			[277.332214, 1271.942383, -43.102074],
			[277.332214, 1271.942383, -19.090073],
			[284.568878, 1275.088989, -19.090073],
			[238.775864, 1300.472412, -19.090073],
			[238.775864, 1300.472412, -43.102074],
			[239.669113, 1308.312988, -43.102074],
			[239.669113, 1308.312988, -19.090073],
			[243.089035, 1285.431152, -43.102074],
			[243.089035, 1285.431152, -19.090073],
			[269.527649, 1270.775879, -43.102074],
			[269.527649, 1270.775879, -19.090073],
			[414.331665, 1388.324097, -19.090073],
			[414.331665, 1388.324097, -43.102074],
			[407.391602, 1360.488892, -19.090073],
			[407.391602, 1360.488892, -43.102074],
			[411.535736, 1363.785278, -19.090073],
			[411.535736, 1363.785278, -43.102074],
			[239.942322, 1292.667725, -19.090073],
			[239.942322, 1292.667725, -43.102074],
			[242.561386, 1315.655273, -43.102074],
			[242.561386, 1315.655273, -19.090073],
			[261.686981, 1271.669067, -19.090073],
			[261.686981, 1271.669067, -43.102074],
			[247.255341, 1321.998657, -19.090073],
			[247.255341, 1321.998657, -43.102074],
			[253.431122, 1326.911011, -43.102074],
			[253.431122, 1326.911011, -19.090073],
			[414.685669, 1368.042114, -19.090073],
			[414.685669, 1368.042114, -43.102074],
		];
		three.expectVerticesInArray(expectedVertices, flipperRubberMeshVertices);
	});

	it('should generate a flipper mesh with a thick rubber', async () => {
		const flipperBaseMesh = three.find<Mesh>(gltf, 'flippers', 'FatRubberFlipper', 'flipperbase-FatRubberFlipper');
		const flipperBaseMeshVertices = three.vertices(flipperBaseMesh);
		let expectedVertices = [
			[588.549866, 1353.731567, -0.187650],
			[588.549866, 1353.731567, -50.212650],
			[588.964294, 1353.401978, -50.212650],
			[588.964294, 1353.401978, -0.187650],
			[589.533325, 1351.957520, -0.187650],
			[589.533325, 1351.957520, -50.212650],
			[589.455078, 1351.433716, -50.212650],
			[589.455078, 1351.433716, -0.187650],
			[588.488525, 1350.218750, -0.187650],
			[588.488525, 1350.218750, -50.212650],
			[587.995850, 1350.024658, -50.212650],
			[587.995850, 1350.024658, -0.187650],
			[589.533325, 1351.957520, -0.187650],
			[589.455078, 1351.433716, -0.187650],
			[589.243896, 1350.948120, -0.187650],
			[588.914246, 1350.533691, -0.187650],
			[588.488525, 1350.218750, -0.187650],
			[587.995850, 1350.024658, -0.187650],
			[587.469727, 1349.964600, -0.187650],
			[586.945984, 1350.042969, -0.187650],
			[586.460388, 1350.254028, -0.187650],
			[702.373230, 1290.614014, -0.187650],
			[703.711365, 1289.549683, -0.187650],
			[704.728394, 1288.175293, -0.187650],
			[705.355042, 1286.584473, -0.187650],
			[705.548584, 1284.885620, -0.187650],
			[705.295837, 1283.194702, -0.187650],
			[704.614014, 1281.626709, -0.187650],
			[703.549683, 1280.288696, -0.187650],
			[702.175293, 1279.271606, -0.187650],
			[700.584473, 1278.645020, -0.187650],
			[698.885681, 1278.451416, -0.187650],
			[697.194702, 1278.704224, -0.187650],
			[695.626770, 1279.385986, -0.187650],
			[588.549866, 1353.731567, -0.187650],
			[588.964294, 1353.401978, -0.187650],
			[589.279297, 1352.976318, -0.187650],
			[589.473389, 1352.483643, -0.187650],
			[589.279297, 1352.976318, -50.212650],
			[588.964294, 1353.401978, -50.212650],
			[588.549866, 1353.731567, -50.212650],
			[695.626770, 1279.385986, -50.212650],
			[697.194702, 1278.704224, -50.212650],
			[698.885681, 1278.451416, -50.212650],
			[700.584473, 1278.645020, -50.212650],
			[702.175293, 1279.271606, -50.212650],
			[703.549683, 1280.288696, -50.212650],
			[704.614014, 1281.626709, -50.212650],
			[705.295837, 1283.194702, -50.212650],
			[705.548584, 1284.885620, -50.212650],
			[705.355042, 1286.584473, -50.212650],
			[704.728394, 1288.175293, -50.212650],
			[703.711365, 1289.549683, -50.212650],
			[702.373230, 1290.614014, -50.212650],
			[586.460388, 1350.254028, -50.212650],
			[586.945984, 1350.042969, -50.212650],
			[587.469727, 1349.964600, -50.212650],
			[587.995850, 1350.024658, -50.212650],
			[588.488525, 1350.218750, -50.212650],
			[588.914246, 1350.533691, -50.212650],
			[589.243896, 1350.948120, -50.212650],
			[589.455078, 1351.433716, -50.212650],
			[589.533325, 1351.957520, -50.212650],
			[589.473389, 1352.483643, -50.212650],
			[705.548584, 1284.885620, -0.187650],
			[705.548584, 1284.885620, -50.212650],
			[705.295837, 1283.194702, -50.212650],
			[705.295837, 1283.194702, -0.187650],
			[589.279297, 1352.976318, -0.187650],
			[589.279297, 1352.976318, -50.212650],
			[589.473389, 1352.483643, -50.212650],
			[589.473389, 1352.483643, -0.187650],
			[588.914246, 1350.533691, -0.187650],
			[588.914246, 1350.533691, -50.212650],
			[702.373230, 1290.614014, -50.212650],
			[703.711365, 1289.549683, -50.212650],
			[703.711365, 1289.549683, -0.187650],
			[702.373230, 1290.614014, -0.187650],
			[702.175293, 1279.271606, -0.187650],
			[702.175293, 1279.271606, -50.212650],
			[700.584473, 1278.645020, -50.212650],
			[700.584473, 1278.645020, -0.187650],
			[704.614014, 1281.626709, -50.212650],
			[704.614014, 1281.626709, -0.187650],
			[704.728394, 1288.175293, -50.212650],
			[704.728394, 1288.175293, -0.187650],
			[589.243896, 1350.948120, -0.187650],
			[589.243896, 1350.948120, -50.212650],
			[586.460388, 1350.254028, -0.187650],
			[586.460388, 1350.254028, -50.212650],
			[586.945984, 1350.042969, -0.187650],
			[586.945984, 1350.042969, -50.212650],
			[703.549683, 1280.288696, -0.187650],
			[703.549683, 1280.288696, -50.212650],
			[698.885681, 1278.451416, -50.212650],
			[698.885681, 1278.451416, -0.187650],
			[705.355042, 1286.584473, -0.187650],
			[705.355042, 1286.584473, -50.212650],
			[697.194702, 1278.704224, -0.187650],
			[697.194702, 1278.704224, -50.212650],
			[695.626770, 1279.385986, -50.212650],
			[695.626770, 1279.385986, -0.187650],
			[587.469727, 1349.964600, -0.187650],
			[587.469727, 1349.964600, -50.212650],
		];
		three.expectVerticesInArray(expectedVertices, flipperBaseMeshVertices);

		const flipperRubberMesh = three.find<Mesh>(gltf, 'flippers', 'FatRubberFlipper', 'flipperrubber-FatRubberFlipper');
		const flipperRubberMeshVertices = three.vertices(flipperRubberMesh);
		expectedVertices = [
			[581.187500, 1340.406494, -5.150120],
			[581.187500, 1340.406494, -45.170120],
			[578.493835, 1342.549194, -45.170120],
			[578.493835, 1342.549194, -5.150120],
			[574.795227, 1351.938477, -5.150120],
			[574.795227, 1351.938477, -45.170120],
			[575.303955, 1355.342773, -45.170120],
			[575.303955, 1355.342773, -5.150120],
			[581.586182, 1363.240601, -5.150120],
			[581.586182, 1363.240601, -45.170120],
			[584.788635, 1364.501953, -45.170120],
			[584.788635, 1364.501953, -5.150120],
			[574.795227, 1351.938477, -5.150120],
			[575.303955, 1355.342773, -5.150120],
			[576.676453, 1358.499390, -5.150120],
			[578.819214, 1361.193115, -5.150120],
			[581.586182, 1363.240601, -5.150120],
			[584.788635, 1364.501953, -5.150120],
			[588.208618, 1364.891724, -5.150120],
			[591.612854, 1364.382935, -5.150120],
			[594.769348, 1363.010498, -5.150120],
			[710.157715, 1303.569580, -5.150120],
			[714.583679, 1300.049072, -5.150120],
			[717.947693, 1295.502930, -5.150120],
			[720.020447, 1290.240967, -5.150120],
			[720.660645, 1284.621826, -5.150120],
			[719.824646, 1279.028564, -5.150120],
			[717.569519, 1273.842285, -5.150120],
			[714.049072, 1269.416382, -5.150120],
			[709.502930, 1266.052368, -5.150120],
			[704.240967, 1263.979492, -5.150120],
			[698.621826, 1263.339355, -5.150120],
			[693.028564, 1264.175293, -5.150120],
			[687.842285, 1266.430420, -5.150120],
			[581.187500, 1340.406494, -5.150120],
			[578.493835, 1342.549194, -5.150120],
			[576.446411, 1345.316040, -5.150120],
			[575.184875, 1348.518677, -5.150120],
			[576.446411, 1345.316040, -45.170120],
			[578.493835, 1342.549194, -45.170120],
			[581.187500, 1340.406494, -45.170120],
			[687.842285, 1266.430420, -45.170120],
			[693.028564, 1264.175293, -45.170120],
			[698.621826, 1263.339355, -45.170120],
			[704.240967, 1263.979492, -45.170120],
			[709.502930, 1266.052368, -45.170120],
			[714.049072, 1269.416382, -45.170120],
			[717.569519, 1273.842285, -45.170120],
			[719.824646, 1279.028564, -45.170120],
			[720.660645, 1284.621826, -45.170120],
			[720.020447, 1290.240967, -45.170120],
			[717.947693, 1295.502930, -45.170120],
			[714.583679, 1300.049072, -45.170120],
			[710.157715, 1303.569580, -45.170120],
			[594.769348, 1363.010498, -45.170120],
			[591.612854, 1364.382935, -45.170120],
			[588.208618, 1364.891724, -45.170120],
			[584.788635, 1364.501953, -45.170120],
			[581.586182, 1363.240601, -45.170120],
			[578.819214, 1361.193115, -45.170120],
			[576.676453, 1358.499390, -45.170120],
			[575.303955, 1355.342773, -45.170120],
			[574.795227, 1351.938477, -45.170120],
			[575.184875, 1348.518677, -45.170120],
			[720.660645, 1284.621826, -5.150120],
			[720.660645, 1284.621826, -45.170120],
			[719.824646, 1279.028564, -45.170120],
			[719.824646, 1279.028564, -5.150120],
			[576.446411, 1345.316040, -5.150120],
			[576.446411, 1345.316040, -45.170120],
			[575.184875, 1348.518677, -45.170120],
			[575.184875, 1348.518677, -5.150120],
			[578.819214, 1361.193115, -5.150120],
			[578.819214, 1361.193115, -45.170120],
			[710.157715, 1303.569580, -45.170120],
			[714.583679, 1300.049072, -45.170120],
			[714.583679, 1300.049072, -5.150120],
			[710.157715, 1303.569580, -5.150120],
			[709.502930, 1266.052368, -5.150120],
			[709.502930, 1266.052368, -45.170120],
			[704.240967, 1263.979492, -45.170120],
			[704.240967, 1263.979492, -5.150120],
			[717.569519, 1273.842285, -45.170120],
			[717.569519, 1273.842285, -5.150120],
			[717.947693, 1295.502930, -45.170120],
			[717.947693, 1295.502930, -5.150120],
			[576.676453, 1358.499390, -5.150120],
			[576.676453, 1358.499390, -45.170120],
			[594.769348, 1363.010498, -5.150120],
			[594.769348, 1363.010498, -45.170120],
			[591.612854, 1364.382935, -5.150120],
			[591.612854, 1364.382935, -45.170120],
			[714.049072, 1269.416382, -5.150120],
			[714.049072, 1269.416382, -45.170120],
			[698.621826, 1263.339355, -45.170120],
			[698.621826, 1263.339355, -5.150120],
			[720.020447, 1290.240967, -5.150120],
			[720.020447, 1290.240967, -45.170120],
			[693.028564, 1264.175293, -5.150120],
			[693.028564, 1264.175293, -45.170120],
			[687.842285, 1266.430420, -45.170120],
			[687.842285, 1266.430420, -5.150120],
			[588.208618, 1364.891724, -5.150120],
			[588.208618, 1364.891724, -45.170120],
		];
		three.expectVerticesInArray(expectedVertices, flipperRubberMeshVertices);
	});

	it('should generate a flipper mesh with no rubber', async () => {
		const flipperBaseMesh = three.find<Mesh>(gltf, 'flippers', 'NoRubberFlipper', 'flipperbase-NoRubberFlipper');
		const flipperBaseMeshVertices = three.vertices(flipperBaseMesh);
		const expectedVertices = [
			[369.230652, 1131.010498, -0.187650],
			[369.230652, 1131.010498, -50.212650],
			[372.387146, 1132.382935, -50.212650],
			[372.387146, 1132.382935, -0.187650],
			[382.413788, 1131.240601, -0.187650],
			[382.413788, 1131.240601, -50.212650],
			[385.180786, 1129.193237, -50.212650],
			[385.180786, 1129.193237, -0.187650],
			[389.204773, 1119.938477, -0.187650],
			[389.204773, 1119.938477, -50.212650],
			[388.815094, 1116.518677, -50.212650],
			[388.815094, 1116.518677, -0.187650],
			[382.413788, 1131.240601, -0.187650],
			[385.180786, 1129.193237, -0.187650],
			[387.323547, 1126.499390, -0.187650],
			[388.696045, 1123.342773, -0.187650],
			[389.204773, 1119.938477, -0.187650],
			[388.815094, 1116.518677, -0.187650],
			[387.553619, 1113.316040, -0.187650],
			[385.506165, 1110.549194, -0.187650],
			[382.812469, 1108.406494, -0.187650],
			[276.157684, 1034.430420, -0.187650],
			[270.971436, 1032.175293, -0.187650],
			[265.378143, 1031.339355, -0.187650],
			[259.759003, 1031.979492, -0.187650],
			[254.497070, 1034.052368, -0.187650],
			[249.950958, 1037.416382, -0.187650],
			[246.430481, 1041.842285, -0.187650],
			[244.175339, 1047.028564, -0.187650],
			[243.339371, 1052.621826, -0.187650],
			[243.979523, 1058.240967, -0.187650],
			[246.052322, 1063.502930, -0.187650],
			[249.416321, 1068.049072, -0.187650],
			[253.842300, 1071.569580, -0.187650],
			[369.230652, 1131.010498, -0.187650],
			[372.387146, 1132.382935, -0.187650],
			[375.791382, 1132.891724, -0.187650],
			[379.211334, 1132.502075, -0.187650],
			[375.791382, 1132.891724, -50.212650],
			[372.387146, 1132.382935, -50.212650],
			[369.230652, 1131.010498, -50.212650],
			[253.842300, 1071.569580, -50.212650],
			[249.416321, 1068.049072, -50.212650],
			[246.052322, 1063.502930, -50.212650],
			[243.979523, 1058.240967, -50.212650],
			[243.339371, 1052.621826, -50.212650],
			[244.175339, 1047.028564, -50.212650],
			[246.430481, 1041.842285, -50.212650],
			[249.950958, 1037.416382, -50.212650],
			[254.497070, 1034.052368, -50.212650],
			[259.759003, 1031.979492, -50.212650],
			[265.378143, 1031.339355, -50.212650],
			[270.971436, 1032.175293, -50.212650],
			[276.157684, 1034.430420, -50.212650],
			[382.812469, 1108.406494, -50.212650],
			[385.506165, 1110.549194, -50.212650],
			[387.553619, 1113.316040, -50.212650],
			[388.815094, 1116.518677, -50.212650],
			[389.204773, 1119.938477, -50.212650],
			[388.696045, 1123.342773, -50.212650],
			[387.323547, 1126.499390, -50.212650],
			[385.180786, 1129.193237, -50.212650],
			[382.413788, 1131.240601, -50.212650],
			[379.211334, 1132.502075, -50.212650],
			[254.497070, 1034.052368, -0.187650],
			[254.497070, 1034.052368, -50.212650],
			[249.950958, 1037.416382, -50.212650],
			[249.950958, 1037.416382, -0.187650],
			[375.791382, 1132.891724, -0.187650],
			[375.791382, 1132.891724, -50.212650],
			[379.211334, 1132.502075, -50.212650],
			[379.211334, 1132.502075, -0.187650],
			[388.696045, 1123.342773, -0.187650],
			[388.696045, 1123.342773, -50.212650],
			[276.157684, 1034.430420, -50.212650],
			[270.971436, 1032.175293, -50.212650],
			[270.971436, 1032.175293, -0.187650],
			[276.157684, 1034.430420, -0.187650],
			[243.339371, 1052.621826, -0.187650],
			[243.339371, 1052.621826, -50.212650],
			[243.979523, 1058.240967, -50.212650],
			[243.979523, 1058.240967, -0.187650],
			[246.430481, 1041.842285, -50.212650],
			[246.430481, 1041.842285, -0.187650],
			[265.378143, 1031.339355, -50.212650],
			[265.378143, 1031.339355, -0.187650],
			[387.323547, 1126.499390, -0.187650],
			[387.323547, 1126.499390, -50.212650],
			[382.812469, 1108.406494, -0.187650],
			[382.812469, 1108.406494, -50.212650],
			[385.506165, 1110.549194, -0.187650],
			[385.506165, 1110.549194, -50.212650],
			[244.175339, 1047.028564, -0.187650],
			[244.175339, 1047.028564, -50.212650],
			[246.052322, 1063.502930, -50.212650],
			[246.052322, 1063.502930, -0.187650],
			[259.759003, 1031.979492, -0.187650],
			[259.759003, 1031.979492, -50.212650],
			[249.416321, 1068.049072, -0.187650],
			[249.416321, 1068.049072, -50.212650],
			[253.842300, 1071.569580, -50.212650],
			[253.842300, 1071.569580, -0.187650],
			[387.553619, 1113.316040, -0.187650],
			[387.553619, 1113.316040, -50.212650],
		];
		three.expectVerticesInArray(expectedVertices, flipperBaseMeshVertices);
		three.expectNoObject(gltf, 'flippers', 'NoRubberFlipper', 'flipperrubber-NoRubberFlipper');
	});

	it('should not generate an invisible flipper', async () => {
		three.expectNoObject(gltf, 'flippers', 'InvisibleFlipper');
	});

	it('should generate a flipper located on a surface', async () => {
		const flipperBaseMesh = three.find<Mesh>(gltf, 'flippers', 'SurfaceFlipper', 'flipperbase-SurfaceFlipper');
		const flipperBaseMeshVertices = three.vertices(flipperBaseMesh);
		let expectedVertices = [
			[481.108154, 765.057495, -50.187649],
			[481.108154, 765.057495, -100.212646],
			[482.565002, 765.690918, -100.212646],
			[482.565002, 765.690918, -50.187649],
			[487.192688, 765.163696, -50.187649],
			[487.192688, 765.163696, -100.212646],
			[488.469788, 764.218750, -100.212646],
			[488.469788, 764.218750, -50.187649],
			[490.326965, 759.947388, -50.187649],
			[490.326965, 759.947388, -100.212646],
			[490.147156, 758.369019, -100.212646],
			[490.147156, 758.369019, -50.187649],
			[487.192688, 765.163696, -50.187649],
			[488.469788, 764.218750, -50.187649],
			[489.458710, 762.975464, -50.187649],
			[490.092194, 761.518555, -50.187649],
			[490.326965, 759.947388, -50.187649],
			[490.147156, 758.369019, -50.187649],
			[489.564911, 756.890869, -50.187649],
			[488.619934, 755.613831, -50.187649],
			[487.376709, 754.624939, -50.187649],
			[380.524963, 680.476379, -50.187649],
			[377.027252, 678.955444, -50.187649],
			[373.255035, 678.391663, -50.187649],
			[369.465393, 678.823425, -50.187649],
			[365.916626, 680.221313, -50.187649],
			[362.850647, 682.490051, -50.187649],
			[360.476379, 685.475037, -50.187649],
			[358.955444, 688.972778, -50.187649],
			[358.391663, 692.744995, -50.187649],
			[358.823395, 696.534607, -50.187649],
			[360.221344, 700.083374, -50.187649],
			[362.490082, 703.149353, -50.187649],
			[365.475037, 705.523621, -50.187649],
			[481.108154, 765.057495, -50.187649],
			[482.565002, 765.690918, -50.187649],
			[484.136169, 765.925781, -50.187649],
			[485.714630, 765.745911, -50.187649],
			[484.136169, 765.925781, -100.212646],
			[482.565002, 765.690918, -100.212646],
			[481.108154, 765.057495, -100.212646],
			[365.475037, 705.523621, -100.212646],
			[362.490082, 703.149353, -100.212646],
			[360.221344, 700.083374, -100.212646],
			[358.823395, 696.534607, -100.212646],
			[358.391663, 692.744995, -100.212646],
			[358.955444, 688.972778, -100.212646],
			[360.476379, 685.475037, -100.212646],
			[362.850647, 682.490051, -100.212646],
			[365.916626, 680.221313, -100.212646],
			[369.465393, 678.823425, -100.212646],
			[373.255035, 678.391663, -100.212646],
			[377.027252, 678.955444, -100.212646],
			[380.524963, 680.476379, -100.212646],
			[487.376709, 754.624939, -100.212646],
			[488.619934, 755.613831, -100.212646],
			[489.564911, 756.890869, -100.212646],
			[490.147156, 758.369019, -100.212646],
			[490.326965, 759.947388, -100.212646],
			[490.092194, 761.518555, -100.212646],
			[489.458710, 762.975464, -100.212646],
			[488.469788, 764.218750, -100.212646],
			[487.192688, 765.163696, -100.212646],
			[485.714630, 765.745911, -100.212646],
			[365.916626, 680.221313, -50.187649],
			[365.916626, 680.221313, -100.212646],
			[362.850647, 682.490051, -100.212646],
			[362.850647, 682.490051, -50.187649],
			[484.136169, 765.925781, -50.187649],
			[484.136169, 765.925781, -100.212646],
			[485.714630, 765.745911, -100.212646],
			[485.714630, 765.745911, -50.187649],
			[490.092194, 761.518555, -50.187649],
			[490.092194, 761.518555, -100.212646],
			[380.524963, 680.476379, -100.212646],
			[377.027252, 678.955444, -100.212646],
			[377.027252, 678.955444, -50.187649],
			[380.524963, 680.476379, -50.187649],
			[358.391663, 692.744995, -50.187649],
			[358.391663, 692.744995, -100.212646],
			[358.823395, 696.534607, -100.212646],
			[358.823395, 696.534607, -50.187649],
			[360.476379, 685.475037, -100.212646],
			[360.476379, 685.475037, -50.187649],
			[373.255035, 678.391663, -100.212646],
			[373.255035, 678.391663, -50.187649],
			[489.458710, 762.975464, -50.187649],
			[489.458710, 762.975464, -100.212646],
			[487.376709, 754.624939, -50.187649],
			[487.376709, 754.624939, -100.212646],
			[488.619934, 755.613831, -50.187649],
			[488.619934, 755.613831, -100.212646],
			[358.955444, 688.972778, -50.187649],
			[358.955444, 688.972778, -100.212646],
			[360.221344, 700.083374, -100.212646],
			[360.221344, 700.083374, -50.187649],
			[369.465393, 678.823425, -50.187649],
			[369.465393, 678.823425, -100.212646],
			[362.490082, 703.149353, -50.187649],
			[362.490082, 703.149353, -100.212646],
			[365.475037, 705.523621, -100.212646],
			[365.475037, 705.523621, -50.187649],
			[489.564911, 756.890869, -50.187649],
			[489.564911, 756.890869, -100.212646],
		];
		three.expectVerticesInArray(expectedVertices, flipperBaseMeshVertices);

		const flipperRubberMesh = three.find<Mesh>(gltf, 'flippers', 'SurfaceFlipper', 'flipperrubber-SurfaceFlipper');
		const flipperRubberMeshVertices = three.vertices(flipperRubberMesh);
		expectedVertices = [
			[477.230652, 771.010437, -69.090073],
			[477.230652, 771.010437, -93.102074],
			[480.387146, 772.382935, -93.102074],
			[480.387146, 772.382935, -69.090073],
			[490.413788, 771.240601, -69.090073],
			[490.413788, 771.240601, -93.102074],
			[493.180786, 769.193176, -93.102074],
			[493.180786, 769.193176, -69.090073],
			[497.204773, 759.938477, -69.090073],
			[497.204773, 759.938477, -93.102074],
			[496.815094, 756.518677, -93.102074],
			[496.815094, 756.518677, -69.090073],
			[490.413788, 771.240601, -69.090073],
			[493.180786, 769.193176, -69.090073],
			[495.323547, 766.499390, -69.090073],
			[496.696045, 763.342773, -69.090073],
			[497.204773, 759.938477, -69.090073],
			[496.815094, 756.518677, -69.090073],
			[495.553619, 753.316101, -69.090073],
			[493.506165, 750.549194, -69.090073],
			[490.812469, 748.406494, -69.090073],
			[384.157684, 674.430481, -69.090073],
			[378.971436, 672.175354, -69.090073],
			[373.378143, 671.339355, -69.090073],
			[367.759003, 671.979553, -69.090073],
			[362.497070, 674.052307, -69.090073],
			[357.950958, 677.416321, -69.090073],
			[354.430481, 681.842285, -69.090073],
			[352.175323, 687.028564, -69.090073],
			[351.339355, 692.621826, -69.090073],
			[351.979523, 698.240967, -69.090073],
			[354.052338, 703.502930, -69.090073],
			[357.416321, 708.049072, -69.090073],
			[361.842316, 711.569519, -69.090073],
			[477.230652, 771.010437, -69.090073],
			[480.387146, 772.382935, -69.090073],
			[483.791382, 772.891724, -69.090073],
			[487.211334, 772.502014, -69.090073],
			[483.791382, 772.891724, -93.102074],
			[480.387146, 772.382935, -93.102074],
			[477.230652, 771.010437, -93.102074],
			[361.842316, 711.569519, -93.102074],
			[357.416321, 708.049072, -93.102074],
			[354.052338, 703.502930, -93.102074],
			[351.979523, 698.240967, -93.102074],
			[351.339355, 692.621826, -93.102074],
			[352.175323, 687.028564, -93.102074],
			[354.430481, 681.842285, -93.102074],
			[357.950958, 677.416321, -93.102074],
			[362.497070, 674.052307, -93.102074],
			[367.759003, 671.979553, -93.102074],
			[373.378143, 671.339355, -93.102074],
			[378.971436, 672.175354, -93.102074],
			[384.157684, 674.430481, -93.102074],
			[490.812469, 748.406494, -93.102074],
			[493.506165, 750.549194, -93.102074],
			[495.553619, 753.316101, -93.102074],
			[496.815094, 756.518677, -93.102074],
			[497.204773, 759.938477, -93.102074],
			[496.696045, 763.342773, -93.102074],
			[495.323547, 766.499390, -93.102074],
			[493.180786, 769.193176, -93.102074],
			[490.413788, 771.240601, -93.102074],
			[487.211334, 772.502014, -93.102074],
			[362.497070, 674.052307, -69.090073],
			[362.497070, 674.052307, -93.102074],
			[357.950958, 677.416321, -93.102074],
			[357.950958, 677.416321, -69.090073],
			[483.791382, 772.891724, -69.090073],
			[483.791382, 772.891724, -93.102074],
			[487.211334, 772.502014, -93.102074],
			[487.211334, 772.502014, -69.090073],
			[496.696045, 763.342773, -69.090073],
			[496.696045, 763.342773, -93.102074],
			[384.157684, 674.430481, -93.102074],
			[378.971436, 672.175354, -93.102074],
			[378.971436, 672.175354, -69.090073],
			[384.157684, 674.430481, -69.090073],
			[351.339355, 692.621826, -69.090073],
			[351.339355, 692.621826, -93.102074],
			[351.979523, 698.240967, -93.102074],
			[351.979523, 698.240967, -69.090073],
			[354.430481, 681.842285, -93.102074],
			[354.430481, 681.842285, -69.090073],
			[373.378143, 671.339355, -93.102074],
			[373.378143, 671.339355, -69.090073],
			[495.323547, 766.499390, -69.090073],
			[495.323547, 766.499390, -93.102074],
			[490.812469, 748.406494, -69.090073],
			[490.812469, 748.406494, -93.102074],
			[493.506165, 750.549194, -69.090073],
			[493.506165, 750.549194, -93.102074],
			[352.175323, 687.028564, -69.090073],
			[352.175323, 687.028564, -93.102074],
			[354.052338, 703.502930, -93.102074],
			[354.052338, 703.502930, -69.090073],
			[367.759003, 671.979553, -69.090073],
			[367.759003, 671.979553, -93.102074],
			[357.416321, 708.049072, -69.090073],
			[357.416321, 708.049072, -93.102074],
			[361.842316, 711.569519, -93.102074],
			[361.842316, 711.569519, -69.090073],
			[495.553619, 753.316101, -69.090073],
			[495.553619, 753.316101, -93.102074],
		];
		three.expectVerticesInArray(expectedVertices, flipperRubberMeshVertices);
	});

});
